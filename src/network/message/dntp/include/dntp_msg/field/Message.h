// Generated by commsdsl2comms v5.0.1

/// @file
/// @brief Contains definition of <b>"Message"</b> field.

#pragma once

#include <cstdint>
#include <tuple>
#include "comms/field/Bundle.h"
#include "comms/field/IntValue.h"
#include "comms/options.h"
#include "dntp_msg/field/FieldBase.h"
#include "dntp_msg/field/MessageCommon.h"
#include "dntp_msg/field/Timestamp.h"
#include "dntp_msg/options/DefaultOptions.h"

namespace dntp_msg
{

namespace field
{

/// @brief Scope for all the member fields of
///     @ref Message field.
/// @tparam TOpt Protocol options.
template <typename TOpt = dntp_msg::options::DefaultOptions>
struct MessageMembers
{
    /// @brief Definition of <b>"version"</b> field.
    class Version : public
        comms::field::IntValue<
            dntp_msg::field::FieldBase<>,
            std::uint8_t,
            comms::option::def::DefaultNumValue<1>
        >
    {
        using Base =
            comms::field::IntValue<
                dntp_msg::field::FieldBase<>,
                std::uint8_t,
                comms::option::def::DefaultNumValue<1>
            >;
    public:
        /// @brief Re-definition of the value type.
        using ValueType = typename Base::ValueType;

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return dntp_msg::field::MessageMembersCommon::VersionCommon::hasSpecials();
        }

        /// @brief Name of the field.
        static const char* name()
        {
            return dntp_msg::field::MessageMembersCommon::VersionCommon::name();
        }
    };

    /// @brief Definition of <b>"originate_timestamp"</b> field.
    /// @details
    ///     the client's timestamp of the request packet transmission
    class Originate_timestamp : public
        dntp_msg::field::Timestamp<
            TOpt
        >
    {
        using Base =
            dntp_msg::field::Timestamp<
                TOpt
            >;
    public:
        /// @brief Name of the field.
        static const char* name()
        {
            return dntp_msg::field::MessageMembersCommon::Originate_timestampCommon::name();
        }
    };

    /// @brief Definition of <b>"receive_timestamp"</b> field.
    /// @details
    ///     the server's timestamp of the request packet reception
    class Receive_timestamp : public
        dntp_msg::field::Timestamp<
            TOpt
        >
    {
        using Base =
            dntp_msg::field::Timestamp<
                TOpt
            >;
    public:
        /// @brief Name of the field.
        static const char* name()
        {
            return dntp_msg::field::MessageMembersCommon::Receive_timestampCommon::name();
        }
    };

    /// @brief Definition of <b>"transmit_timestamp"</b> field.
    /// @details
    ///     the server's timestamp of the response packet transmission
    class Transmit_timestamp : public
        dntp_msg::field::Timestamp<
            TOpt
        >
    {
        using Base =
            dntp_msg::field::Timestamp<
                TOpt
            >;
    public:
        /// @brief Name of the field.
        static const char* name()
        {
            return dntp_msg::field::MessageMembersCommon::Transmit_timestampCommon::name();
        }
    };

    /// @brief All members bundled in @b std::tuple.
    using All =
        std::tuple<
           Version,
           Originate_timestamp,
           Receive_timestamp,
           Transmit_timestamp
        >;
};

/// @brief Definition of <b>"Message"</b> field.
/// @tparam TOpt Protocol options.
/// @tparam TExtraOpts Extra options.
template <typename TOpt = dntp_msg::options::DefaultOptions, typename... TExtraOpts>
class Message : public
    comms::field::Bundle<
        dntp_msg::field::FieldBase<>,
        typename MessageMembers<TOpt>::All,
        TExtraOpts...
    >
{
    using Base =
        comms::field::Bundle<
            dntp_msg::field::FieldBase<>,
            typename MessageMembers<TOpt>::All,
            TExtraOpts...
        >;
public:
    /// @brief Allow access to internal fields.
    /// @details See definition of @b COMMS_FIELD_MEMBERS_NAMES macro
    ///     related to @b comms::field::Bundle class from COMMS library
    ///     for details.
    ///
    ///     The generated values, types and access functions are:
    ///     @li @b FieldIdx_version index, @b Field_version type and @b field_version() access function -
    ///         for dntp_msg::field::MessageMembers::Version member field.
    ///     @li @b FieldIdx_originate_timestamp index, @b Field_originate_timestamp type and @b field_originate_timestamp() access function -
    ///         for dntp_msg::field::MessageMembers::Originate_timestamp member field.
    ///     @li @b FieldIdx_receive_timestamp index, @b Field_receive_timestamp type and @b field_receive_timestamp() access function -
    ///         for dntp_msg::field::MessageMembers::Receive_timestamp member field.
    ///     @li @b FieldIdx_transmit_timestamp index, @b Field_transmit_timestamp type and @b field_transmit_timestamp() access function -
    ///         for dntp_msg::field::MessageMembers::Transmit_timestamp member field.
    COMMS_FIELD_MEMBERS_NAMES(
        version,
        originate_timestamp,
        receive_timestamp,
        transmit_timestamp
    );

    /// @brief Name of the field.
    static const char* name()
    {
        return dntp_msg::field::MessageCommon::name();
    }
};

} // namespace field

} // namespace dntp_msg
